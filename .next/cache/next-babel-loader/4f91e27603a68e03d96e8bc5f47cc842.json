{"ast":null,"code":"async function fetchAPI(query, {\n  variables\n} = {}) {\n  const res = await fetch(`https://customer.50d.top/graphql`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error('Failed to fetch API');\n  }\n\n  return json.data;\n}\n\nexport async function getArticles() {\n  // const data = await fetchAPI(`query Articles {\n  //   articles {\n  //     id\n  //     title\n  //     category {\n  //       id\n  //       name\n  //     }\n  //     image {\n  //       url\n  //     }\n  //   }\n  // }`)\n  debugger;\n  const data = {\n    articles: []\n  };\n  return data.articles;\n}\nexport async function getArticle(id) {\n  // const data = await fetchAPI(\n  //   `query Articles($id: ID!) {\n  //   article(id: $id) {\n  //     id\n  //     title\n  //     content\n  //     image {\n  //       url\n  //     }\n  //     category {\n  //       id\n  //       name\n  //     }\n  //     published_at\n  //   }\n  // }`,\n  //   { variables: { id } }\n  // )\n  const data = {\n    article: []\n  };\n  return data.article;\n}\nexport async function getCategories() {\n  // const data = await fetchAPI(`query Categories {\n  //   categories {\n  //     id\n  //     name\n  //   }\n  // }`)\n  const data = {\n    categories: []\n  };\n  return data.categories;\n}\nexport async function getCategory(id) {\n  //   const data = await fetchAPI(\n  //     `query Category($id: ID!) {\n  //     category(id: $id) {\n  //       id\n  //       name\n  //       articles {\n  //         id\n  //         title\n  //         content\n  //         image {\n  //           url\n  //         }\n  //         category {\n  //           id\n  //           name\n  //         }\n  //       }\n  //     }\n  //   }\n  // `,\n  //     { variables: { id } }\n  //   )\n  const data = {\n    category: []\n  };\n  return data.category;\n}\nexport async function getProductsByDomainAndCat(domain, cat) {\n  const data = await fetchAPI(`query Websiteseometas($domain: String, $cat: String) {\n    websiteseometas(where:{domain:{name: $domain}, product_identify_cat: $cat}) {\n      title\n      slug\n      product_identify_cat\n      domain{\n        name\n      }\n      commonproduct{\n        model\n        volumn\n      }\n    }\n  }`, {\n    variables: {\n      domain,\n      cat\n    }\n  });\n  debugger;\n  return data.websiteseometas;\n}\nexport async function getProductCategory(id) {\n  const data = await fetchAPI(`query Category($id: ID!) {\n    category(id: $id) {\n      id\n      name\n      articles {\n        id\n        title\n        content\n        image {\n          url\n        }\n        category {\n          id\n          name\n        }\n      }\n    }\n  }\n`, {\n    variables: {\n      id\n    }\n  });\n  return data.category;\n}","map":{"version":3,"sources":["D:/projects/strapi/strapi-starter-next-blog/frontend/lib/api.js"],"names":["fetchAPI","query","variables","res","fetch","method","headers","body","JSON","stringify","json","errors","console","error","Error","data","getArticles","articles","getArticle","id","article","getCategories","categories","getCategory","category","getProductsByDomainAndCat","domain","cat","websiteseometas","getProductCategory"],"mappings":"AAAA,eAAeA,QAAf,CAAwBC,KAAxB,EAA+B;AAAEC,EAAAA;AAAF,IAAgB,EAA/C,EAAmD;AACjD,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,kCAAF,EAAqC;AAC1DC,IAAAA,MAAM,EAAE,MADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiD;AAK1DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBR,MAAAA,KADmB;AAEnBC,MAAAA;AAFmB,KAAf;AALoD,GAArC,CAAvB;AAWA,QAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAJ,EAAnB;;AACA,MAAIA,IAAI,CAACC,MAAT,EAAiB;AACfC,IAAAA,OAAO,CAACC,KAAR,CAAcH,IAAI,CAACC,MAAnB;AACA,UAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;AACD;;AAED,SAAOJ,IAAI,CAACK,IAAZ;AACD;;AAED,OAAO,eAAeC,WAAf,GAA6B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMD,IAAI,GAAC;AACTE,IAAAA,QAAQ,EAAE;AADD,GAAX;AAGA,SAAOF,IAAI,CAACE,QAAZ;AACD;AAED,OAAO,eAAeC,UAAf,CAA0BC,EAA1B,EAA8B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMJ,IAAI,GAAC;AACTK,IAAAA,OAAO,EAAE;AADA,GAAX;AAIA,SAAOL,IAAI,CAACK,OAAZ;AACD;AAED,OAAO,eAAeC,aAAf,GAA+B;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,QAAMN,IAAI,GAAC;AACTO,IAAAA,UAAU,EAAE;AADH,GAAX;AAGA,SAAOP,IAAI,CAACO,UAAZ;AACD;AAED,OAAO,eAAeC,WAAf,CAA2BJ,EAA3B,EAA+B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,QAAMJ,IAAI,GAAC;AACTS,IAAAA,QAAQ,EAAE;AADD,GAAX;AAIA,SAAOT,IAAI,CAACS,QAAZ;AACD;AAGD,OAAO,eAAeC,yBAAf,CAA0CC,MAA1C,EAAkDC,GAAlD,EAAuD;AAC5D,QAAMZ,IAAI,GAAG,MAAMf,QAAQ,CAAE;;;;;;;;;;;;;IAAF,EAc3B;AAAEE,IAAAA,SAAS,EAAE;AAAEwB,MAAAA,MAAF;AAAUC,MAAAA;AAAV;AAAb,GAd2B,CAA3B;AAgBA;AACA,SAAOZ,IAAI,CAACa,eAAZ;AACD;AAED,OAAO,eAAeC,kBAAf,CAAkCV,EAAlC,EAAsC;AAC3C,QAAMJ,IAAI,GAAG,MAAMf,QAAQ,CACxB;;;;;;;;;;;;;;;;;;CADwB,EAoBzB;AAAEE,IAAAA,SAAS,EAAE;AAAEiB,MAAAA;AAAF;AAAb,GApByB,CAA3B;AAsBA,SAAOJ,IAAI,CAACS,QAAZ;AACD","sourcesContent":["async function fetchAPI(query, { variables } = {}) {\r\n  const res = await fetch(`https://customer.50d.top/graphql`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      query,\r\n      variables,\r\n    }),\r\n  })\r\n\r\n  const json = await res.json()\r\n  if (json.errors) {\r\n    console.error(json.errors)\r\n    throw new Error('Failed to fetch API')\r\n  }\r\n\r\n  return json.data\r\n}\r\n\r\nexport async function getArticles() {\r\n  // const data = await fetchAPI(`query Articles {\r\n  //   articles {\r\n  //     id\r\n  //     title\r\n  //     category {\r\n  //       id\r\n  //       name\r\n  //     }\r\n  //     image {\r\n  //       url\r\n  //     }\r\n  //   }\r\n  // }`)\r\n  debugger\r\n  const data={\r\n    articles: []\r\n  }\r\n  return data.articles\r\n}\r\n\r\nexport async function getArticle(id) {\r\n  // const data = await fetchAPI(\r\n  //   `query Articles($id: ID!) {\r\n  //   article(id: $id) {\r\n  //     id\r\n  //     title\r\n  //     content\r\n  //     image {\r\n  //       url\r\n  //     }\r\n  //     category {\r\n  //       id\r\n  //       name\r\n  //     }\r\n  //     published_at\r\n  //   }\r\n  // }`,\r\n  //   { variables: { id } }\r\n  // )\r\n  const data={\r\n    article: []\r\n  }\r\n\r\n  return data.article\r\n}\r\n\r\nexport async function getCategories() {\r\n  // const data = await fetchAPI(`query Categories {\r\n  //   categories {\r\n  //     id\r\n  //     name\r\n  //   }\r\n  // }`)\r\n  const data={\r\n    categories: []\r\n  }\r\n  return data.categories\r\n}\r\n\r\nexport async function getCategory(id) {\r\n//   const data = await fetchAPI(\r\n//     `query Category($id: ID!) {\r\n//     category(id: $id) {\r\n//       id\r\n//       name\r\n//       articles {\r\n//         id\r\n//         title\r\n//         content\r\n//         image {\r\n//           url\r\n//         }\r\n//         category {\r\n//           id\r\n//           name\r\n//         }\r\n//       }\r\n//     }\r\n//   }\r\n// `,\r\n//     { variables: { id } }\r\n//   )\r\n  const data={\r\n    category: []\r\n  }\r\n\r\n  return data.category\r\n}\r\n\r\n\r\nexport async function getProductsByDomainAndCat( domain, cat) {\r\n  const data = await fetchAPI(`query Websiteseometas($domain: String, $cat: String) {\r\n    websiteseometas(where:{domain:{name: $domain}, product_identify_cat: $cat}) {\r\n      title\r\n      slug\r\n      product_identify_cat\r\n      domain{\r\n        name\r\n      }\r\n      commonproduct{\r\n        model\r\n        volumn\r\n      }\r\n    }\r\n  }`,\r\n  { variables: { domain, cat } }\r\n  )\r\n  debugger\r\n  return data.websiteseometas\r\n}\r\n\r\nexport async function getProductCategory(id) {\r\n  const data = await fetchAPI(\r\n    `query Category($id: ID!) {\r\n    category(id: $id) {\r\n      id\r\n      name\r\n      articles {\r\n        id\r\n        title\r\n        content\r\n        image {\r\n          url\r\n        }\r\n        category {\r\n          id\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`,\r\n    { variables: { id } }\r\n  )\r\n  return data.category\r\n}"]},"metadata":{},"sourceType":"module"}