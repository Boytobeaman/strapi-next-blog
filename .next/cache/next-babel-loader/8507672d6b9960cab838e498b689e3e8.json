{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction fetchAPI(_x) {\n  return _fetchAPI.apply(this, arguments);\n}\n\nfunction _fetchAPI() {\n  _fetchAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n    var _ref,\n        variables,\n        res,\n        json,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, variables = _ref.variables;\n            _context.next = 3;\n            return fetch(\"https://customer.50d.top/graphql\", {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                query: query,\n                variables: variables\n              })\n            });\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            json = _context.sent;\n\n            if (!json.errors) {\n              _context.next = 10;\n              break;\n            }\n\n            console.error(json.errors);\n            throw new Error('Failed to fetch API');\n\n          case 10:\n            return _context.abrupt(\"return\", json.data);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchAPI.apply(this, arguments);\n}\n\nexport function getArticles() {\n  return _getArticles.apply(this, arguments);\n}\n\nfunction _getArticles() {\n  _getArticles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetchAPI(\"query Articles {\\n    articles {\\n      id\\n      title\\n      category {\\n        id\\n        name\\n      }\\n      image {\\n        url\\n      }\\n    }\\n  }\");\n\n          case 2:\n            data = _context2.sent;\n            debugger;\n            return _context2.abrupt(\"return\", data.articles);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getArticles.apply(this, arguments);\n}\n\nexport function getArticle(_x2) {\n  return _getArticle.apply(this, arguments);\n}\n\nfunction _getArticle() {\n  _getArticle = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchAPI(\"query Articles($id: ID!) {\\n    article(id: $id) {\\n      id\\n      title\\n      content\\n      image {\\n        url\\n      }\\n      category {\\n        id\\n        name\\n      }\\n      published_at\\n    }\\n  }\", {\n              variables: {\n                id: id\n              }\n            });\n\n          case 2:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data.article);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getArticle.apply(this, arguments);\n}\n\nexport function getCategories() {\n  return _getCategories.apply(this, arguments);\n}\n\nfunction _getCategories() {\n  _getCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetchAPI(\"query Categories {\\n    categories {\\n      id\\n      name\\n    }\\n  }\");\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data.categories);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getCategories.apply(this, arguments);\n}\n\nexport function getCategory(_x3) {\n  return _getCategory.apply(this, arguments);\n}\n\nfunction _getCategory() {\n  _getCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetchAPI(\"query Category($id: ID!) {\\n    category(id: $id) {\\n      id\\n      name\\n      articles {\\n        id\\n        title\\n        content\\n        image {\\n          url\\n        }\\n        category {\\n          id\\n          name\\n        }\\n      }\\n    }\\n  }\\n\", {\n              variables: {\n                id: id\n              }\n            });\n\n          case 2:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data.category);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _getCategory.apply(this, arguments);\n}\n\nexport function getProductsByDomainAndCat(_x4, _x5) {\n  return _getProductsByDomainAndCat.apply(this, arguments);\n}\n\nfunction _getProductsByDomainAndCat() {\n  _getProductsByDomainAndCat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(domain, cat) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetchAPI(\"query Websiteseometas {\\n    websiteseometas(where:{domain:{name: $domain}, product_identify_cat: $cat}) {\\n      title\\n      slug\\n      product_identify_cat\\n      domain{\\n        name\\n      }\\n      commonproduct{\\n        model\\n        volumn\\n      }\\n    }\\n  }\", {\n              variables: {\n                domain: domain,\n                cat: cat\n              }\n            });\n\n          case 2:\n            data = _context6.sent;\n            debugger;\n            return _context6.abrupt(\"return\", data.websiteseometas);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getProductsByDomainAndCat.apply(this, arguments);\n}\n\nexport function getProductCategory(_x6) {\n  return _getProductCategory.apply(this, arguments);\n}\n\nfunction _getProductCategory() {\n  _getProductCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return fetchAPI(\"query Category($id: ID!) {\\n    category(id: $id) {\\n      id\\n      name\\n      articles {\\n        id\\n        title\\n        content\\n        image {\\n          url\\n        }\\n        category {\\n          id\\n          name\\n        }\\n      }\\n    }\\n  }\\n\", {\n              variables: {\n                id: id\n              }\n            });\n\n          case 2:\n            data = _context7.sent;\n            return _context7.abrupt(\"return\", data.category);\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getProductCategory.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}