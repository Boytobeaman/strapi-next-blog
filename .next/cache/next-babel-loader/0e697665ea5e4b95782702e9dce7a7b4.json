{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\strapi\\\\strapi-starter-next-blog\\\\frontend\\\\pages\\\\collapsible-bins\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport SingleProduct from '../../components/singleProduct';\nimport { getCategory, getCategories, getProduct, getProductsByCondition } from '../../lib/api';\nimport Layout from '../../components/layout';\nimport { DOMAIN, FOLDING_CRATE } from '../../utils';\n\nconst Product = ({\n  product,\n  categories\n}) => {\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(SingleProduct, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport async function getStaticPaths() {\n  let condition = {\n    \"domain\": {\n      \"name\": DOMAIN\n    },\n    \"product_identify_cat\": FOLDING_CRATE\n  };\n  const products = (await getProductsByCondition(condition)) || [];\n  return {\n    paths: products.map(product => ({\n      params: {\n        id: product.id,\n        slug: product.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  console.log(`product id ====== ${params.id}`);\n  const product = (await getProduct(params.id)) || [];\n  console.log(`product ====== ${product}`);\n  const categories = (await getCategories()) || [];\n  return {\n    props: {\n      product,\n      categories\n    }\n  };\n}\nexport default Product;","map":{"version":3,"sources":["D:/projects/strapi/strapi-starter-next-blog/frontend/pages/collapsible-bins/[slug].js"],"names":["SingleProduct","getCategory","getCategories","getProduct","getProductsByCondition","Layout","DOMAIN","FOLDING_CRATE","Product","product","categories","getStaticPaths","condition","products","paths","map","params","id","slug","fallback","getStaticProps","console","log","props"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,gCAA1B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,UAArC,EAAiDC,sBAAjD,QAA+E,eAA/E;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,MAAR,EAAgBC,aAAhB,QAAqC,aAArC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAC3C,SACE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAED,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,OAAO,eAAeE,cAAf,GAAgC;AACrC,MAAIC,SAAS,GAAG;AAAC,cAAS;AAAC,cAAQN;AAAT,KAAV;AAA4B,4BAAwBC;AAApD,GAAhB;AACA,QAAMM,QAAQ,GAAG,CAAC,MAAMT,sBAAsB,CAACQ,SAAD,CAA7B,KAA6C,EAA9D;AACA,SAAO;AACLE,IAAAA,KAAK,EAAED,QAAQ,CAACE,GAAT,CAAaN,OAAO,KAAK;AAC9BO,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAER,OAAO,CAACQ,EADN;AAENC,QAAAA,IAAI,EAAET,OAAO,CAACS;AAFR;AADsB,KAAL,CAApB,CADF;AAOLC,IAAAA,QAAQ,EAAE;AAPL,GAAP;AASD;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEJ,EAAAA;AAAF,CAA9B,EAA0C;AAC/CK,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBN,MAAM,CAACC,EAAG,EAA3C;AACA,QAAMR,OAAO,GAAG,CAAC,MAAMN,UAAU,CAACa,MAAM,CAACC,EAAR,CAAjB,KAAiC,EAAjD;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAa,kBAAiBb,OAAQ,EAAtC;AACA,QAAMC,UAAU,GAAG,CAAC,MAAMR,aAAa,EAApB,KAA2B,EAA9C;AACA,SAAO;AACLqB,IAAAA,KAAK,EAAE;AAAEd,MAAAA,OAAF;AAAWC,MAAAA;AAAX;AADF,GAAP;AAGD;AAED,eAAeF,OAAf","sourcesContent":["import SingleProduct from '../../components/singleProduct'\r\nimport { getCategory, getCategories, getProduct, getProductsByCondition } from '../../lib/api'\r\nimport Layout from '../../components/layout'\r\nimport {DOMAIN, FOLDING_CRATE } from '../../utils'\r\n\r\nconst Product = ({ product, categories }) => {\r\n  return (\r\n    <Layout categories={categories}>\r\n      <div className=\"uk-section\">\r\n        <SingleProduct product={product} />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  let condition = {\"domain\":{\"name\": DOMAIN}, \"product_identify_cat\": FOLDING_CRATE}\r\n  const products = (await getProductsByCondition(condition)) || []\r\n  return {\r\n    paths: products.map(product => ({\r\n      params: {\r\n        id: product.id,\r\n        slug: product.slug\r\n      },\r\n    })),\r\n    fallback: false,\r\n  }\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  console.log(`product id ====== ${params.id}`)\r\n  const product = (await getProduct(params.id)) || []\r\n  \r\n  console.log(`product ====== ${product}`)\r\n  const categories = (await getCategories()) || []\r\n  return {\r\n    props: { product, categories },\r\n  }\r\n}\r\n\r\nexport default Product\r\n"]},"metadata":{},"sourceType":"module"}